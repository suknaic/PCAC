// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id           String        @id @default(uuid())
  image        String?
  nome         String
  cpf          Int           @unique
  email        String        @unique
  telefone     Int           @unique
  senha        String?
  endereco     Endereco      @relation(fields: [enderecoId], references: [id])
  enderecoId   String
  createAt     DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  Solicitacoes Solicitacao[]
  Mensagem     Mensagem[]
  Entidade     Entidade[]
}

model Endereco {
  id        String     @id @default(uuid())
  latitude  Decimal
  longitude Decimal
  rua       String
  numero    Int
  cidade    String
  uf        String     @db.VarChar(2)
  Entidade  Entidade[]
  Usuario   Usuario[]
}

model Entidade {
  id         String   @id @default(uuid())
  nome       String
  tipo       String
  telefone   String
  detalhe    String?
  endereco   Endereco @relation(fields: [enderecoId], references: [id])
  enderecoId String
  createAt   DateTime @default(now())
  updatedAt  DateTime @updatedAt
  usuario    Usuario  @relation(fields: [usuarioId], references: [id])
  usuarioId  String
}

model Solicitacao {
  id         String     @id @default(uuid())
  tipo       String
  assunto    String
  descricao  String
  status     String
  finalizada Boolean    @default(false)
  Usuario    Usuario    @relation(fields: [usuarioId], references: [id])
  usuarioId  String
  mensagens  Mensagem[]
  createAt   DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model Mensagem {
  id            String       @id @default(uuid())
  descricao     String?
  audio         String[]
  Solicitacao   Solicitacao? @relation(fields: [solicitacaoId], references: [id])
  solicitacaoId String?
  usuario       Usuario      @relation(fields: [usuarioId], references: [id])
  usuarioId     String
  superuser     SuperUser    @relation(fields: [superUserId], references: [id])
  superUserId   String
  createAt      DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
}

model SuperUser {
  id       String     @id @default(uuid())
  nome     String
  email    String     @unique
  senha    String
  Mensagem Mensagem[]
}
